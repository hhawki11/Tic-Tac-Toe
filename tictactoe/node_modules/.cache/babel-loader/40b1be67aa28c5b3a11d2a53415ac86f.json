{"ast":null,"code":"var _jsxFileName = \"/Users/hunterhawkins/Desktop/tictactoe/src/components/Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Board from './Board';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Game() {\n  _s();\n\n  const [history, setHistory] = useState(Array(9).fill(null));\n  const [xNext, setXNext] = useState(true);\n  const newHistory = history;\n  const current = newHistory[newHistory.length - 1];\n  const winner = calculateWinner(current.squares);\n  let status;\n\n  if (winner) {\n    status = 'Winner: ' + winner;\n  } else {\n    status = 'Next player: ' + (xNext ? 'X' : 'O');\n  }\n\n  function handleClick(i) {\n    const newHistory = history;\n    const current = newHistory[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = xNext ? 'X' : 'O';\n    setHistory(history.concat([{\n      squares: squares\n    }]));\n    setXNext(!xNext);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        squares: current.squares,\n        onCliick: i => handleClick(i)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n\n  function calculateWinner(squares) {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n\n    return null;\n  }\n}\n\n_s(Game, \"P3BtB6bdHZNKudB9UDlbiLn/Dc0=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/hunterhawkins/Desktop/tictactoe/src/components/Game.js"],"names":["React","useState","Board","Game","history","setHistory","Array","fill","xNext","setXNext","newHistory","current","length","winner","calculateWinner","squares","status","handleClick","i","slice","concat","lines","a","b","c"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Board from './Board';\n\nfunction Game() {\n    const [history, setHistory] = useState(Array(9).fill(null));\n    const [xNext, setXNext] = useState(true);\n\n    const newHistory = history;\n    const current = newHistory[newHistory.length - 1];\n    const winner = calculateWinner(current.squares);\n\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (xNext ? 'X' : 'O');\n    }\n\n    function handleClick(i) {\n        const newHistory = history;\n        const current = newHistory[history.length - 1];\n        const squares = current.squares.slice();\n        if (calculateWinner(squares) || squares[i]) {\n            return;\n        }\n        squares[i] = xNext ? 'X' : 'O';\n        setHistory(history.concat([{ squares: squares }]));\n        setXNext(!xNext);\n    }\n\n    return (\n        <div className=\"game\">\n            <div className=\"game-board\">\n              <Board \n                squares={current.squares}\n                onCliick={(i) => handleClick(i)}\n              />\n            </div>\n            <div className=\"game-info\">\n                <div>{status}</div>\n                <ol>{/* TODO */}</ol>\n            </div>\n        </div>\n  );\n\n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  }\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}