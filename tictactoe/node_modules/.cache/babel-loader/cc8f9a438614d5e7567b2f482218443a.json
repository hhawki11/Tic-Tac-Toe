{"ast":null,"code":"var _jsxFileName = \"/Users/hunterhawkins/Desktop/tictactoe/src/components/Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Board from './Board';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Game() {\n  _s();\n\n  const [history, setHistory] = useState([{\n    squares: Array(9).fill(null)\n  }]);\n  const [xNext, setXNext] = useState(true);\n  const [stepNum, setStepNum] = useState(0);\n  const [winners, setWinners] = useState([]);\n  const newHistory = history;\n  const current = newHistory[stepNum]; //const current = newHistory[newHistory.length - 1];\n\n  const winner = calculateWinner(current.squares);\n  refreshList();\n  console.log(winners);\n\n  function refreshList() {\n    axios.get(\"/api/todos/\").then(res => setWinners(res.data)).catch(err => console.log(err));\n  }\n\n  ;\n  const moves = history.map((step, move) => {\n    const desc = move ? 'Go to move #' + move : 'Go to game start';\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        children: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this);\n  });\n  let status;\n\n  if (winner) {\n    status = 'Winner: ' + winner;\n  } else {\n    status = 'Next player: ' + (xNext ? 'X' : 'O');\n  }\n\n  function handleClick(i) {\n    axios.post(\"/api/todos/\", {\n      id: 4,\n      title: \"test\",\n      description: \"\",\n      completed: false\n    }).then(res => refreshList());\n    const newHistory = history.slice(0, stepNum + 1);\n    const current = newHistory[newHistory.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = xNext ? 'X' : 'O';\n    setHistory(history.concat([{\n      squares: squares\n    }]));\n    setStepNum(history.length);\n    setXNext(!xNext);\n  }\n\n  function jumpTo(step) {\n    setStepNum(step);\n    setXNext(step % 2 === 0);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        squares: current.squares,\n        onClick: i => handleClick(i)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n\n  function calculateWinner(squares) {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        addWinner(squares[a]); //setWinners([...winners], [])\n\n        return squares[a];\n      }\n    }\n\n    return null;\n  }\n\n  function addWinner(name) {\n    //create new obj\n    const item = {\n      title: name,\n      description: \"\",\n      completed: false\n    };\n\n    if (item.id) {\n      axios.put(`/api/todos/${item.id}/`, item).then(res => refreshList());\n      return;\n    }\n\n    axios.post(\"/api/todos/\", item).then(res => refreshList());\n  }\n}\n\n_s(Game, \"HCbZppiPpAvGQliD9mZYhVMrGUg=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/hunterhawkins/Desktop/tictactoe/src/components/Game.js"],"names":["React","useState","Board","axios","Game","history","setHistory","squares","Array","fill","xNext","setXNext","stepNum","setStepNum","winners","setWinners","newHistory","current","winner","calculateWinner","refreshList","console","log","get","then","res","data","catch","err","moves","map","step","move","desc","jumpTo","status","handleClick","i","post","id","title","description","completed","slice","length","concat","lines","a","b","c","addWinner","name","item","put"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Board from './Board';\nimport axios from \"axios\";\n\nfunction Game() {\n    const [history, setHistory] = useState([{squares: Array(9).fill(null)}]);\n    const [xNext, setXNext] = useState(true);\n    const [stepNum, setStepNum] = useState(0);\n    const [winners, setWinners] = useState([]);\n\n    const newHistory = history;\n    const current = newHistory[stepNum];\n    //const current = newHistory[newHistory.length - 1];\n    const winner = calculateWinner(current.squares);\n\n    refreshList();\n    console.log(winners);\n\n    function refreshList() {\n      axios\n        .get(\"/api/todos/\")\n        .then((res) => setWinners(res.data))\n        .catch((err) => console.log(err));\n    };\n\n    const moves = history.map((step, move) => {\n        const desc = move ?\n          'Go to move #' + move :\n          'Go to game start';\n        return (\n          <li key={move}>\n            <button onClick={() => jumpTo(move)}>{desc}</button>\n          </li>\n        );\n    });\n\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (xNext ? 'X' : 'O');\n    }\n\n    function handleClick(i) {\n        axios\n          .post(\"/api/todos/\", { id: 4, title: \"test\", description: \"\", completed: false })\n          .then((res) => refreshList());\n        const newHistory = history.slice(0, stepNum + 1);\n        const current = newHistory[newHistory.length - 1];\n        const squares = current.squares.slice();\n        if (calculateWinner(squares) || squares[i]) {\n            return;\n        }\n        squares[i] = xNext ? 'X' : 'O';\n        setHistory(history.concat([{ squares: squares }]));\n        setStepNum(history.length);\n        setXNext(!xNext);\n    }\n\n    function jumpTo(step) {\n        setStepNum(step);\n        setXNext((step % 2) === 0);\n    }\n\n    return (\n        <div className=\"game\">\n            <div className=\"game-board\">\n              <Board \n                squares={current.squares}\n                onClick={(i) => handleClick(i)}\n              />\n            </div>\n            <div className=\"game-info\">\n                <div>{ status }</div>\n                <ol>{ moves }</ol>\n            </div>\n            <div className=\"game-info\">\n                <h1>Hi</h1>\n            </div>\n        </div>\n  );\n\n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        addWinner(squares[a]);\n        //setWinners([...winners], [])\n        return squares[a];\n      }\n    }\n    return null;\n  }\n\n  function addWinner(name) {\n    //create new obj\n    const item = { title: name, description: \"\", completed: false };\n    if (item.id) {\n      axios\n        .put(`/api/todos/${item.id}/`, item)\n        .then((res) => refreshList());\n      return;\n    }\n    axios\n      .post(\"/api/todos/\", item)\n      .then((res) => refreshList());\n  }\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}